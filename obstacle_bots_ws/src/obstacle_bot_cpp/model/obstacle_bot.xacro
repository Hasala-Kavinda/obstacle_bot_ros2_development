<?xml version="1.0" encoding="utf-8"?>
<robot name="obstacle_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Properties -->
  <xacro:property name="PI" value="3.14159265359"/>
  
  <!-- Base properties -->
  <xacro:property name="base_mass" value="0.2"/>
  <xacro:property name="base_length" value="0.08"/>
  <xacro:property name="base_width" value="0.08"/>
  <xacro:property name="base_height" value="0.04"/>
  
  <!-- Wheel properties -->
  <xacro:property name="wheel_radius" value="0.017"/>
  <xacro:property name="wheel_length" value="0.006"/>
  <xacro:property name="wheel_mass" value="0.05"/>
  <xacro:property name="wheel_offset_y" value="0.0403"/>
  <xacro:property name="wheel_offset_z" value="0.008"/>
  
  <!-- Caster wheel properties -->
  <xacro:property name="caster_radius" value="0.008"/>
  <xacro:property name="caster_mass" value="0.01"/>
  <xacro:property name="caster_offset_x" value="0.03"/>
  
  <!-- Joint dynamics -->
  <xacro:property name="wheel_damping" value="0.1"/>
  <xacro:property name="wheel_friction" value="0.1"/>

  <!-- Material definitions -->
  <material name="white_transparent">
    <color rgba="1 1 1 0.3"/>
  </material>

  <material name="light_blue">
    <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
  </material>

  <material name="dark_gray">
    <color rgba="0.2 0.2 0.2 1"/>
  </material>

  <!-- Macro for inertial block -->
  <xacro:macro name="inertial_box" params="mass length width height *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia 
        ixx="${(1/12) * mass * (height*height + width*width)}" 
        ixy="0" 
        ixz="0"
        iyy="${(1/12) * mass * (height*height + length*length)}" 
        iyz="0"
        izz="${(1/12) * mass * (length*length + width*width)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="inertial_cylinder" params="mass radius length *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia 
        ixx="${(1/12) * mass * (3*radius*radius + length*length)}" 
        ixy="0" 
        ixz="0"
        iyy="${(1/12) * mass * (3*radius*radius + length*length)}" 
        iyz="0"
        izz="${(1/2) * mass * radius * radius}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="inertial_sphere" params="mass radius *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia 
        ixx="${(2/5) * mass * radius * radius}" 
        ixy="0" 
        ixz="0"
        iyy="${(2/5) * mass * radius * radius}" 
        iyz="0"
        izz="${(2/5) * mass * radius * radius}"/>
    </inertial>
  </xacro:macro>

  <!-- Macro for wheel link -->
  <xacro:macro name="wheel_link" params="name color">
    <link name="${name}">
      <xacro:inertial_cylinder mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_cylinder>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
        <material name="${color}"/>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- Macro for caster wheel -->
  <xacro:macro name="caster_wheel" params="name x_offset">
    <link name="${name}">
      <xacro:inertial_sphere mass="${caster_mass}" radius="${caster_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_sphere>
      
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="dark_gray"/>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${name}_joint" type="fixed">
      <origin xyz="${x_offset} 0 0" rpy="0 0 0"/>
      <parent link="Base"/>
      <child link="${name}"/>
    </joint>
  </xacro:macro>


  <xacro:include filename="$(find obstacle_bot_cpp)/model/obstacle_bot.gazebo"/>

  <!-- Base Link -->
  <link name="Base">
    <xacro:inertial_box mass="${base_mass}" length="${base_length}" width="${base_width}" height="${base_height}">
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
    </xacro:inertial_box>
    
    <visual>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="white_transparent"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
  </link>

  <!-- Right Wheel -->
  <xacro:wheel_link name="Right_wheel" color="light_blue"/>

  <joint name="Right_wheel_joint" type="continuous">
    <origin xyz="0 -${wheel_offset_y} ${wheel_offset_z}" rpy="${PI/2} 0 0"/>
    <parent link="Base"/>
    <child link="Right_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="${wheel_damping}" friction="${wheel_friction}"/>
  </joint>

  <!-- Left Wheel -->
  <xacro:wheel_link name="Left_wheel" color="light_blue"/>

  <joint name="Left_wheel_joint" type="continuous">
    <origin xyz="0 ${wheel_offset_y} ${wheel_offset_z}" rpy="${PI/2} 0 0"/>
    <parent link="Base"/>
    <child link="Left_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="${wheel_damping}" friction="${wheel_friction}"/>
  </joint>

  <!-- Front Caster Wheel -->
  <xacro:caster_wheel name="Front_caster_wheel" x_offset="${caster_offset_x}"/>

  <!-- Rear Caster Wheel -->
  <xacro:caster_wheel name="Rear_caster_wheel" x_offset="${-caster_offset_x}"/>

</robot>
